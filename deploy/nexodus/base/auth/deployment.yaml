apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    spec:
      containers:
        - image: quay.io/keycloak/keycloak:21.0.2
          name: keycloak
          env:
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL_HOST
              valueFrom:
                secretKeyRef:
                  name: database-pguser-keycloak
                  key: pgbouncer-host
            - name: KC_DB_URL_PORT
              valueFrom:
                secretKeyRef:
                  name: database-pguser-keycloak
                  key: pgbouncer-port
            - name: KC_DB_URL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: database-pguser-keycloak
                  key: dbname
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database-pguser-keycloak
                  key: user
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-pguser-keycloak
                  key: password
            - name: KC_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: hostname
            - name: KC_PROXY
              value: "edge"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HTTP_PORT
              value: "8080"
            - name: KC_HTTPS_PORT
              value: "8443"
            - name: KC_HTTPS_CERTIFICATE_FILE
              value: "/etc/pki/tls/certs/cert.pem"
            - name: KC_HTTPS_CERTIFICATE_KEY_FILE
              value: "/etc/pki/tls/private/cert.key"
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: keycloak-admin-password
            - name: WEB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: web-client-id
            - name: WEB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: web-client-secret
            - name: CLI_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: cli-client-id
            - name: FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: frontend-url
            - name: REDIRECT_URL
              valueFrom:
                configMapKeyRef:
                  name: auth-config
                  key: redirect-url
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: auth-providers
                  key: GOOGLE_CLIENT_ID
                  optional: true
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-providers
                  key: GOOGLE_CLIENT_SECRET
                  optional: true
          resources:
            requests:
              cpu: 500m
              memory: 1000Mi
            limits:
              cpu: 500m
              memory: 1000Mi
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          readinessProbe:
            httpGet:
              path: /realms/nexodus
              port: 8080
          volumeMounts:
            - name: certificate
              mountPath: "/etc/pki/tls/certs"
              readOnly: true
            - name: privatekey
              mountPath: "/etc/pki/tls/private"
              readOnly: true
            - name: realm
              mountPath: "/opt/keycloak/data/import"
              readOnly: true
          command: ["/opt/keycloak/bin/kc.sh"]
          args: ["start", "--import-realm", "--features=preview", "--features=declarative-user-profile"]
      restartPolicy: Always
      volumes:
        - name: certificate
          secret:
            secretName: nexodus-auth-cert
            items:
              - key: tls.crt
                path: cert.pem
            optional: false
        - name: privatekey
          secret:
            secretName: nexodus-auth-cert
            items:
              - key: tls.key
                path: cert.key
            optional: false
        - name: realm
          configMap:
            name: realm
            items:
              - key: nexodus.json
                path: nexodus.json
